image: eu.gcr.io/savannah-emr/golang-ci-image:0.0.4

stages:
  - test
  - deploy

variables:
  GOOGLE_APPLICATION_CREDENTIALS: $CI_PROJECT_DIR/bewell-app-ci.json

services:
  - name: docker:dind
    entrypoint: ["env", "-u", "DOCKER_HOST"]
    command: ["dockerd-entrypoint.sh"]

lint_and_test:
  stage: test
  before_script:
    - bash decrypt_service_account.sh
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.slade360emr.com".insteadOf "https://gitlab.slade360emr.com"
  script:
    - staticcheck ./...
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
    - errcheck -ignore 'os:.*,' $(go list ./... | grep -v /vendor/)
    - gosec ./...
    - go-acc -o coverage.txt --ignore generated,cmd ./...
    - grep -v "generated.go" coverage.txt | grep -v "_gen.go" | grep -v "mocks.go" | grep -v "*resolver*go" | grep -v "server.go" > coverage.out
    - go tool cover -html=coverage.out -o coverage.html
    - gocov convert coverage.out > coverage.json
    - gocov report coverage.json > coverage_report.txt
    - tail coverage_report.txt
  artifacts:
    untracked: true
    paths:
      - $CI_PROJECT_DIR/coverage.txt
      - $CI_PROJECT_DIR/coverage.json
      - $CI_PROJECT_DIR/coverage.html
      - $CI_PROJECT_DIR/coverage_report.txt
  tags:
    - healthcloud-multi

deploy_develop_to_staging:
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_STAGING_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app-testing
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_STAGING_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app-testing
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  resource_group: staging # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app-testing/clinical-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app-testing/clinical-staging:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy clinical-staging --image eu.gcr.io/bewell-app-testing/clinical-staging:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated --update-env-vars "GOOGLE_CLOUD_PROJECT=$STAGING_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$STAGING_FIREBASE_WEB_API_KEY,CLOUD_HEALTH_PUBSUB_TOPIC=$STAGING_CLOUD_HEALTH_PUBSUB_TOPIC,CLOUD_HEALTH_DATASET_ID=$STAGING_CLOUD_HEALTH_DATASET_ID,CLOUD_HEALTH_FHIRSTORE_ID=$STAGING_CLOUD_HEALTH_FHIRSTORE_ID,AIT_USERNAME=$STAGING_AIT_USERNAME,AIT_ENVIRONMENT=$STAGING_AIT_ENVIRONMENT,AIT_SENDER_ID=$STAGING_AIT_SENDER_ID,AIT_API_KEY=$STAGING_AIT_API_KEY"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker clinical-staging --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic clinical-staging --to-latest --region europe-west1 --platform managed --quiet
  tags:
    - healthcloud-multi

deploy_develop_to_testing:
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - develop
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $TESTING_GATEWAY_RELOAD_ENDPOINT
  resource_group: testing # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/clinical-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/clinical-testing:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy clinical-testing --image eu.gcr.io/bewell-app/clinical-testing:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --update-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,CLOUD_HEALTH_PUBSUB_TOPIC=$TESTING_CLOUD_HEALTH_PUBSUB_TOPIC_PRO,CLOUD_HEALTH_DATASET_ID=$TESTING_CLOUD_HEALTH_DATASET_ID_PRO,CLOUD_HEALTH_FHIRSTORE_ID=$TESTING_CLOUD_HEALTH_FHIRSTORE_ID_PRO,AIT_USERNAME=$AIT_USERNAME,AIT_ENVIRONMENT=$AIT_ENVIRONMENT,AIT_SENDER_ID=$AIT_SENDER_ID,AIT_API_KEY=$AIT_API_KEY"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker clinical-testing --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic clinical-testing --to-latest | cut -c1-8) --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi

deploy_master_to_prod:
  before_script:
    # Instead of writing our GCP service account private key into a file, supply it as env variable
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - /google-cloud-sdk/bin/gcloud config set project bewell-app
    - docker login -u _json_key --password-stdin https://eu.gcr.io < $GCLOUD_PRODUCTION_SERVICE_ACCOUNT
    - export CLOUDSDK_CORE_PROJECT=bewell-app
  image: eu.gcr.io/savannah-emr/gcloud-docker-in-docker:0.0.1
  stage: deploy
  only:
    - master
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GATEWAY_RELOAD_ENDPOINT: $PROD_GATEWAY_RELOAD_ENDPOINT
  resource_group: prod # control deploy concurrency
  script:
    - docker build -q --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN -f $CI_PROJECT_DIR/Dockerfile . -t eu.gcr.io/bewell-app/clinical-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud auth configure-docker
    - docker -- push eu.gcr.io/bewell-app/clinical-prod:$(echo $CI_COMMIT_SHA | cut -c1-8)
    - /google-cloud-sdk/bin/gcloud run deploy clinical-prod --image eu.gcr.io/bewell-app/clinical-prod:$(echo $CI_COMMIT_SHA | cut -c1-8) --region europe-west1 --platform managed --allow-unauthenticated  --update-env-vars "GOOGLE_CLOUD_PROJECT=$PROD_GOOGLE_CLOUD_PROJECT,FIREBASE_WEB_API_KEY=$PROD_FIREBASE_WEB_API_KEY,CLOUD_HEALTH_PUBSUB_TOPIC=$PROD_CLOUD_HEALTH_PUBSUB_TOPIC_PRO,CLOUD_HEALTH_DATASET_ID=$PROD_CLOUD_HEALTH_DATASET_ID_PRO,CLOUD_HEALTH_FHIRSTORE_ID=$PROD_CLOUD_HEALTH_FHIRSTORE_ID_PRO,AIT_USERNAME=$PROD_AIT_USERNAME,AIT_ENVIRONMENT=$PROD_AIT_ENVIRONMENT,AIT_SENDER_ID=$PROD_AIT_SENDER_ID,AIT_API_KEY=$PROD_AIT_API_KEY"
    - /google-cloud-sdk/bin/gcloud run services add-iam-policy-binding --platform managed --region=europe-west1 --member=allUsers --role=roles/run.invoker clinical-prod --quiet
    - /google-cloud-sdk/bin/gcloud alpha run services update-traffic clinical-prod --to-latest --region europe-west1 --platform managed --quiet
    - bash reload.sh
  tags:
    - healthcloud-multi
